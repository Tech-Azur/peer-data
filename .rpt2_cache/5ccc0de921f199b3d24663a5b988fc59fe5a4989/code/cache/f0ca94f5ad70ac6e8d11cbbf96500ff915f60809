{"code":"var EventDispatcher = (function () {\r\n    function EventDispatcher() {\r\n        this.handlers = {};\r\n    }\r\n    EventDispatcher.getInstance = function () {\r\n        if (!EventDispatcher.globalInstance) {\r\n            EventDispatcher.globalInstance = new EventDispatcher();\r\n        }\r\n        return EventDispatcher.globalInstance;\r\n    };\r\n    EventDispatcher.prototype.register = function (type, callback) {\r\n        if (!this.handlers[type]) {\r\n            this.handlers[type] = [];\r\n        }\r\n        this.handlers[type].push(callback);\r\n    };\r\n    EventDispatcher.prototype.unregister = function (type, callback) {\r\n        if (this.handlers[type]) {\r\n            var index = this.handlers[type].indexOf(callback);\r\n            if (index !== -1) {\r\n                delete this.handlers[type][index];\r\n            }\r\n        }\r\n    };\r\n    EventDispatcher.prototype.dispatch = function (type) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (this.handlers[type]) {\r\n            this.handlers[type].forEach(function (h) { return h.apply(void 0, args); });\r\n        }\r\n    };\r\n    return EventDispatcher;\r\n}());\r\nexport { EventDispatcher };\r\n//# sourceMappingURL=EventDispatcher.js.map","map":{"version":3,"file":"EventDispatcher.js","sourceRoot":"","sources":["../../src/app/EventDispatcher.ts"],"names":[],"mappings":"AAGA;IAAA;QAUU,aAAQ,GAA2B,EAAE,CAAC;IAuBhD,CAAC;IAhCQ,2BAAW,GAAlB;QACE,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,cAAc,GAAG,IAAI,eAAe,EAAE,CAAC;QACzD,CAAC;QAED,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC;IACxC,CAAC;IAKD,kCAAQ,GAAR,UAAS,IAAY,EAAE,QAAsB;QAC3C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,oCAAU,GAAV,UAAW,IAAY,EAAE,QAAsB;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;IACH,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,eAAI,IAAI,GAAT,CAAU,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IACH,sBAAC;AAAD,CAAC,AAjCD,IAiCC","sourcesContent":["import { EventHandlerCollection } from './EventHandlerCollection';\nimport { EventHandler } from './EventHandler';\n\nexport class EventDispatcher {\n  static getInstance(): EventDispatcher {\n    if (!EventDispatcher.globalInstance) {\n      EventDispatcher.globalInstance = new EventDispatcher();\n    }\n\n    return EventDispatcher.globalInstance;\n  }\n\n  private static globalInstance: EventDispatcher;\n  private handlers: EventHandlerCollection = {};\n\n  register(type: string, callback: EventHandler) {\n    if (!this.handlers[type]) {\n      this.handlers[type] = [];\n    }\n    this.handlers[type].push(callback);\n  }\n\n  unregister(type: string, callback: EventHandler) {\n    if (this.handlers[type]) {\n      const index = this.handlers[type].indexOf(callback);\n      if (index !== -1) {\n        delete this.handlers[type][index];\n      }\n    }\n  }\n\n  dispatch(type: string, ...args) {\n    if (this.handlers[type]) {\n      this.handlers[type].forEach(h => h(...args));\n    }\n  }\n}\n"]},"dts":{"name":"/Users/vardius/Projects/peer-data/.code/app/EventDispatcher.d.ts","text":"import { EventHandler } from './EventHandler';\r\nexport declare class EventDispatcher {\r\n    static getInstance(): EventDispatcher;\r\n    private static globalInstance;\r\n    private handlers;\r\n    register(type: string, callback: EventHandler): void;\r\n    unregister(type: string, callback: EventHandler): void;\r\n    dispatch(type: string, ...args: any[]): void;\r\n}\r\n"}}
